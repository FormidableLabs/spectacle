// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Presenter /> should render correctly 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide />,
      <Slide />,
    ]
  }
>
  <Styled(div)>
    <div
      className="css-sv4lnp"
    >
      <Styled(div)>
        <div
          className="css-1r7cznp"
        >
          <Styled(h2)>
            <h2
              className="css-yx1htb"
            >
              Slide 
              2
               of
               
              3
            </h2>
          </Styled(h2)>
          <Time
            timer={undefined}
          >
            <Styled(div)>
              <div
                className="css-1is0qkf"
              >
                <Clock>
                  <Styled(h2)>
                    <h2
                      className="css-13h1vl2"
                    >
                      11 : 04 : 08 AM
                    </h2>
                  </Styled(h2)>
                </Clock>
              </div>
            </Styled(div)>
          </Time>
        </div>
      </Styled(div)>
      <Styled(div)>
        <div
          className="css-10c960h"
        >
          <Styled(div)>
            <div
              className="css-1vkvbxb"
            >
              <Styled(div)
                className="spectacle-presenter-main"
              >
                <div
                  className="spectacle-presenter-main css-7mgt11"
                >
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    key="1"
                    lastSlideIndex={undefined}
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
              <Styled(div)>
                <div
                  className="css-rij0dq"
                >
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    key="2"
                    lastSlideIndex={undefined}
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
            </div>
          </Styled(div)>
          <Styled(div)>
            <div
              className="css-1c94gjj"
            >
              <undefined />
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
    </div>
  </Styled(div)>
</Presenter>
`;

exports[`<Presenter /> should render timer when set in params. 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide
        notes="These are my slide notes!!"
      />,
      <Slide />,
    ]
  }
  timer={true}
>
  <Styled(div)>
    <div
      className="css-sv4lnp"
    >
      <Styled(div)>
        <div
          className="css-1r7cznp"
        >
          <Styled(h2)>
            <h2
              className="css-yx1htb"
            >
              Slide 
              2
               of
               
              3
            </h2>
          </Styled(h2)>
          <Time
            timer={true}
          >
            <Styled(div)>
              <div
                className="css-1is0qkf"
              >
                <Timer>
                  <div>
                    <Styled(h2)>
                      <h2
                        className="css-13h1vl2"
                      >
                        00 : 00
                      </h2>
                    </Styled(h2)>
                    <Styled(div)>
                      <div
                        className="css-h8auqq"
                      >
                        <Styled(button)
                          onClick={[Function]}
                          start={true}
                        >
                          <button
                            className="css-9wjm4c"
                            onClick={[Function]}
                            start={true}
                          >
                            Start
                          </button>
                        </Styled(button)>
                      </div>
                    </Styled(div)>
                  </div>
                </Timer>
              </div>
            </Styled(div)>
          </Time>
        </div>
      </Styled(div)>
      <Styled(div)>
        <div
          className="css-10c960h"
        >
          <Styled(div)>
            <div
              className="css-1vkvbxb"
            >
              <Styled(div)
                className="spectacle-presenter-main"
              >
                <div
                  className="spectacle-presenter-main css-7mgt11"
                >
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    key="1"
                    lastSlideIndex={undefined}
                    notes="These are my slide notes!!"
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
              <Styled(div)>
                <div
                  className="css-rij0dq"
                >
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    key="2"
                    lastSlideIndex={undefined}
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
            </div>
          </Styled(div)>
          <Styled(div)>
            <div
              className="css-1c94gjj"
            >
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "These are my slide notes!!",
                  }
                }
              />
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
    </div>
  </Styled(div)>
</Presenter>
`;

exports[`<Presenter /> should render with notes when slides have them. 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide
        notes="These are my slide notes!!"
      />,
      <Slide />,
    ]
  }
>
  <Styled(div)>
    <div
      className="css-sv4lnp"
    >
      <Styled(div)>
        <div
          className="css-1r7cznp"
        >
          <Styled(h2)>
            <h2
              className="css-yx1htb"
            >
              Slide 
              2
               of
               
              3
            </h2>
          </Styled(h2)>
          <Time
            timer={undefined}
          >
            <Styled(div)>
              <div
                className="css-1is0qkf"
              >
                <Clock>
                  <Styled(h2)>
                    <h2
                      className="css-13h1vl2"
                    >
                      11 : 04 : 08 AM
                    </h2>
                  </Styled(h2)>
                </Clock>
              </div>
            </Styled(div)>
          </Time>
        </div>
      </Styled(div)>
      <Styled(div)>
        <div
          className="css-10c960h"
        >
          <Styled(div)>
            <div
              className="css-1vkvbxb"
            >
              <Styled(div)
                className="spectacle-presenter-main"
              >
                <div
                  className="spectacle-presenter-main css-7mgt11"
                >
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    key="1"
                    lastSlideIndex={undefined}
                    notes="These are my slide notes!!"
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
              <Styled(div)>
                <div
                  className="css-rij0dq"
                >
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    key="2"
                    lastSlideIndex={undefined}
                    presenter={true}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}
                    transitionIn={Array []}
                    transitionOut={Array []}
                  >
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </Styled(div)>
            </div>
          </Styled(div)>
          <Styled(div)>
            <div
              className="css-1c94gjj"
            >
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "These are my slide notes!!",
                  }
                }
              />
            </div>
          </Styled(div)>
        </div>
      </Styled(div)>
    </div>
  </Styled(div)>
</Presenter>
`;

exports[`<Presenter /> should render correctly 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide />,
      <Slide />,
    ]
  }>
  <styled.div>
    <div
      className="sc-htpNat fRLcwV">
      <styled.div>
        <div
          className="sc-bZQynM iOAbYn">
          <styled.h2>
            <h2
              className="sc-htoDjs kFIwxN">
              Slide 
              2
               of 
              3
            </h2>
          </styled.h2>
          <Time>
            <styled.div>
              <div
                className="sc-iwsKbI iRLepQ">
                <Clock>
                  <styled.h2>
                    <h2
                      className="sc-dnqmqq eGDBrA">
                      11 : 04 : 08 AM
                    </h2>
                  </styled.h2>
                </Clock>
              </div>
            </styled.div>
          </Time>
        </div>
      </styled.div>
      <styled.div>
        <div
          className="sc-bdVaJa cBqlhQ">
          <styled.div>
            <div
              className="sc-bxivhb kMdPqE">
              <styled.div>
                <div
                  className="sc-ifAKCX eFCOrc">
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    lastSlide={0}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-EHOje kuhIVK">
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    lastSlide={0}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
            </div>
          </styled.div>
          <styled.div>
            <div
              className="sc-gzVnrw fdGSgx" />
          </styled.div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Presenter>
`;

exports[`<Presenter /> should render timer when set in params. 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide
        notes="These are my slide notes!!" />,
      <Slide />,
    ]
  }
  timer={true}>
  <styled.div>
    <div
      className="sc-htpNat fRLcwV">
      <styled.div>
        <div
          className="sc-bZQynM iOAbYn">
          <styled.h2>
            <h2
              className="sc-htoDjs kFIwxN">
              Slide 
              2
               of 
              3
            </h2>
          </styled.h2>
          <Time
            timer={true}>
            <styled.div>
              <div
                className="sc-iwsKbI iRLepQ">
                <Timer>
                  <div>
                    <styled.h2>
                      <h2
                        className="sc-dnqmqq eGDBrA">
                        00 : 00
                      </h2>
                    </styled.h2>
                    <styled.div>
                      <div
                        className="sc-gZMcBi kXgPpP">
                        <styled.button
                          onClick={[Function]}
                          start={true}>
                          <button
                            className="sc-gqjmRU dazZrr"
                            onClick={[Function]}
                            start={true}>
                            Start
                          </button>
                        </styled.button>
                      </div>
                    </styled.div>
                  </div>
                </Timer>
              </div>
            </styled.div>
          </Time>
        </div>
      </styled.div>
      <styled.div>
        <div
          className="sc-bdVaJa cBqlhQ">
          <styled.div>
            <div
              className="sc-bxivhb kMdPqE">
              <styled.div>
                <div
                  className="sc-ifAKCX eFCOrc">
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    lastSlide={0}
                    notes="These are my slide notes!!"
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-EHOje kuhIVK">
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    lastSlide={0}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
            </div>
          </styled.div>
          <styled.div>
            <div
              className="sc-gzVnrw fdGSgx">
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "These are my slide notes!!",
                  }
                } />
            </div>
          </styled.div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Presenter>
`;

exports[`<Presenter /> should render with notes when slides have them. 1`] = `
<Presenter
  dispatch={[Function]}
  hash={1}
  lastSlide={0}
  route={
    Object {
      "params": Array [],
      "slide": 1,
    }
  }
  slideIndex={1}
  slideReference={
    Array [
      Object {
        "id": 0,
        "rootIndex": 0,
      },
      Object {
        "id": 1,
        "rootIndex": 1,
      },
      Object {
        "id": 2,
        "rootIndex": 2,
      },
    ]
  }
  slides={
    Array [
      <Slide />,
      <Slide
        notes="These are my slide notes!!" />,
      <Slide />,
    ]
  }>
  <styled.div>
    <div
      className="sc-htpNat fRLcwV">
      <styled.div>
        <div
          className="sc-bZQynM iOAbYn">
          <styled.h2>
            <h2
              className="sc-htoDjs kFIwxN">
              Slide 
              2
               of 
              3
            </h2>
          </styled.h2>
          <Time>
            <styled.div>
              <div
                className="sc-iwsKbI iRLepQ">
                <Clock>
                  <styled.h2>
                    <h2
                      className="sc-dnqmqq eGDBrA">
                      11 : 04 : 08 AM
                    </h2>
                  </styled.h2>
                </Clock>
              </div>
            </styled.div>
          </Time>
        </div>
      </styled.div>
      <styled.div>
        <div
          className="sc-bdVaJa cBqlhQ">
          <styled.div>
            <div
              className="sc-bxivhb kMdPqE">
              <styled.div>
                <div
                  className="sc-ifAKCX eFCOrc">
                  <Slide
                    dispatch={[Function]}
                    export={false}
                    hash={1}
                    lastSlide={0}
                    notes="These are my slide notes!!"
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={1}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
              <styled.div>
                <div
                  className="sc-EHOje kuhIVK">
                  <Slide
                    appearOff={true}
                    dispatch={[Function]}
                    export={false}
                    hash={2}
                    lastSlide={0}
                    presenterStyle={
                      Object {
                        "position": "relative",
                      }
                    }
                    print={false}
                    slideIndex={2}
                    transition={Array []}
                    transitionDuration={0}>
                    <div>
                      Slide Content
                    </div>
                  </Slide>
                </div>
              </styled.div>
            </div>
          </styled.div>
          <styled.div>
            <div
              className="sc-gzVnrw fdGSgx">
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "These are my slide notes!!",
                  }
                } />
            </div>
          </styled.div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</Presenter>
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ComponentPlayground /> Should render the dark theme correctly 1`] = `
<div
  class="theme-dark jELORc"
>
  <div
    class="playground"
  >
    <div
      class="playgroundCode"
    >
      <div
        class="ReactCodeMirror playgroundStage"
      >
        <textarea
          autocomplete="off"
        >
          /**
           * Sample React Component 
           * Output domContainerNode is 'mountNode'
           */
          
          const styles = {
            heading: {
              fontSize: "2.25rem",
              fontWeight: "bold"
            },
            copy: {
              fontSize: "1.5rem"
            }
          }
          
          const HelloWorld = ({ name }) =&gt; (
            &lt;div&gt;
              &lt;h1 style={styles.heading}&gt;
                Create Live Code Examples in {name}!
              &lt;/h1&gt;
              &lt;p style={styles.copy}&gt;
                Supports Light and Dark Syntax Themes
              &lt;/p&gt;
            &lt;/div&gt;
          )
          
          render(
            &lt;HelloWorld name="Spectacle" /&gt;, 
            mountNode)
        </textarea>
      </div>
    </div>
    <div
      class="playgroundPreview"
    >
      <div>
        <div
          class="previewArea"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<ComponentPlayground /> Should render the light theme correctly 1`] = `
<div
  class="theme-light jELORc"
>
  <div
    class="playground"
  >
    <div
      class="playgroundCode"
    >
      <div
        class="ReactCodeMirror playgroundStage"
      >
        <textarea
          autocomplete="off"
        >
          /**
           * Sample React Component 
           * Output domContainerNode is 'mountNode'
           */
          
          const styles = {
            heading: {
              fontSize: "2.25rem",
              fontWeight: "bold"
            },
            copy: {
              fontSize: "1.5rem"
            }
          }
          
          const HelloWorld = ({ name }) =&gt; (
            &lt;div&gt;
              &lt;h1 style={styles.heading}&gt;
                Create Live Code Examples in {name}!
              &lt;/h1&gt;
              &lt;p style={styles.copy}&gt;
                Supports Light and Dark Syntax Themes
              &lt;/p&gt;
            &lt;/div&gt;
          )
          
          render(
            &lt;HelloWorld name="Spectacle" /&gt;, 
            mountNode)
        </textarea>
      </div>
    </div>
    <div
      class="playgroundPreview"
    >
      <div>
        <div
          class="previewArea"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<ComponentPlayground /> Should render with a custom background color 1`] = `
<div
  class="theme-light TlFwj"
>
  <div
    class="playground"
  >
    <div
      class="playgroundCode"
    >
      <div
        class="ReactCodeMirror playgroundStage"
      >
        <textarea
          autocomplete="off"
        >
          /**
           * Sample React Component 
           * Output domContainerNode is 'mountNode'
           */
          
          const styles = {
            heading: {
              fontSize: "2.25rem",
              fontWeight: "bold"
            },
            copy: {
              fontSize: "1.5rem"
            }
          }
          
          const HelloWorld = ({ name }) =&gt; (
            &lt;div&gt;
              &lt;h1 style={styles.heading}&gt;
                Create Live Code Examples in {name}!
              &lt;/h1&gt;
              &lt;p style={styles.copy}&gt;
                Supports Light and Dark Syntax Themes
              &lt;/p&gt;
            &lt;/div&gt;
          )
          
          render(
            &lt;HelloWorld name="Spectacle" /&gt;, 
            mountNode)
        </textarea>
      </div>
    </div>
    <div
      class="playgroundPreview"
    >
      <div>
        <div
          class="previewArea"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<ComponentPlayground /> Should render with a custom code block 1`] = `
<div
  class="theme-light TlFwj"
>
  <div
    class="playground"
  >
    <div
      class="playgroundCode"
    >
      <div
        class="ReactCodeMirror playgroundStage"
      >
        <textarea
          autocomplete="off"
        >
          const Button = ({ title }) =&gt; (&lt;button type="button"&gt;{ title }&lt;/button&gt;);
                render(&lt;Button title="My Button" /&gt;, mountNode);
        </textarea>
      </div>
    </div>
    <div
      class="playgroundPreview"
    >
      <div>
        <div
          class="previewArea"
        />
      </div>
    </div>
  </div>
</div>
`;

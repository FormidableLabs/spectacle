name: Deploy Website

on:
  push:
    paths:
      - '.github/workflows/docs.yml'
      - 'docs/**'
      - 'website/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/docs.yml'
      - 'docs/**'
      - 'website/**'

jobs:
  deploy-website:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: AWS CLI version
        run: "aws --version"

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      # Wireit cache
      - uses: google/wireit@setup-github-actions-caching/v1

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the website
        working-directory: ./website
        run: pnpm build

      # Use `gh` tool to infer more information about the pull request.
      # The underlying issue here is pushes to a non-mergeable/main target branch
      # don't have the PR number easily available.
      # https://stackoverflow.com/a/70102700
      - name: Get pull request info
        id: pr_info
        run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy docs (production)
        if: github.ref == 'refs/heads/main'
        working-directory: ./website
        run: pnpm deploy:prod
        env:
          GITHUB_DEPLOYMENT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}